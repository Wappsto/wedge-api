# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2
import node_pb2 as node__pb2


class NodeStub(object):
    """The node service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateState = channel.unary_unary(
                '/node.Node/UpdateState',
                request_serializer=node__pb2.UpdateStateRequest.SerializeToString,
                response_deserializer=common__pb2.Replay.FromString,
                )
        self.DeleteDevice = channel.unary_unary(
                '/node.Node/DeleteDevice',
                request_serializer=node__pb2.DeleteDeviceRequest.SerializeToString,
                response_deserializer=common__pb2.Replay.FromString,
                )


class NodeServicer(object):
    """The node service definition.
    """

    def UpdateState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateState,
                    request_deserializer=node__pb2.UpdateStateRequest.FromString,
                    response_serializer=common__pb2.Replay.SerializeToString,
            ),
            'DeleteDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDevice,
                    request_deserializer=node__pb2.DeleteDeviceRequest.FromString,
                    response_serializer=common__pb2.Replay.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'node.Node', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Node(object):
    """The node service definition.
    """

    @staticmethod
    def UpdateState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.Node/UpdateState',
            node__pb2.UpdateStateRequest.SerializeToString,
            common__pb2.Replay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.Node/DeleteDevice',
            node__pb2.DeleteDeviceRequest.SerializeToString,
            common__pb2.Replay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
